{
	".NET Gadgeteer": {
		"title": ".NET Gadgeteer",
		"short_title": "Gadgeteer",
		"image": "/toolkits/media/photos/1.jpg",
		"url": "https://dl.acm.org/doi/abs/10.1145/2445196.2445315",
		"notes": "In this paper we present the features of a new physical device prototyping platform called Microsoft .NET Gadgeteer along with our initial experiences using it to teach computer science in high schools. Gadgeteer makes it easy for newcomers to electronics and computing to plug together modules with varied functionality and to program the resulting system's behavior. We believe the platform is particularly suited to teaching modern programming concepts such as object-oriented, event-based programming and it could be a timely addition to established teaching tools given the current interest in improving high school computer science education in some regions. We have run a number of pilot studies in the US and in the UK with students of varying age and ability. Our results indicate that the tangible and expressive nature of Gadgeteer helps to engage and motivate a diverse set of students. We were also pleasantly surprised by the level of polish and sophistication of the devices which were built. We hope to further explore the potential of Gadgeteer for teaching in future work and we encourage others to build on our experiences.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Multiple copies"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"A construction kit for electronic textiles": {
		"title": "A construction kit for electronic textiles",
		"short_title": "e-textile construction kit",
		"image": "/toolkits/media/photos/13.png",
		"url": "https://ieeexplore.ieee.org/document/4067731",
		"notes": "Construction kits have long been popular as educational artifacts, supporting and encouraging creative explorations of engineering and design; but to date, such kits have had little connection with the new and expanding field of electronic textiles (e-textiles). We believe that creating an e-textile construction kit could provide a powerful new medium to engage a diverse range of students in electrical engineering and computer science. This paper, then, describes a construction kit designed to introduce novices to electronics, computing and design via e-textiles. We describe each component of the kit, provide examples of constructions that were built with the kit, and examine the durability of these constructions. We conclude with a discussion of the results of preliminary user testing and an exploration of our plans for continued work in this area.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Thread"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"A Method and Toolkit for Digital Musical Instruments Generating Ideas and Prototypes": {
		"title": "A Method and Toolkit for Digital Musical Instruments Generating Ideas and Prototypes",
		"short_title": "DMI toolkit",
		"image": "/toolkits/media/photos/125.jpg",
		"url": "https://www.researchgate.net/publication/313538280_A_Method_and_Toolkit_for_Digital_Musical_Instruments_Generating_Ideas_and_Prototypes",
		"notes": "Digital musical instruments (DMIs) make up a class of devices in which gestural control and sound production are physically decoupled, but digitally mapped. This work discusses aspects of DMI design by focusing on the complexity of the design space and the importance of prototyping cycles. The authors' research questions cover how to provide an initial path for generating DMI ideas and how to reduce the time and effort required to build functional DMI prototypes. To address these questions, they propose a new methodology and an associated physical prototyping toolkit, which has building blocks inspired by of existing instruments. Preliminary tests with musicians and DMI designers revealed a strong potential for its use in the development of DMIs, and also uncovered limitations of the current toolkit. This article is part of a special issue on multimedia technologies for enriched music.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Musical instruments"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Always tethered"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Adafruit Circuit Playground": {
		"title": "Adafruit Circuit Playground",
		"short_title": "Circuit Playground",
		"image": "/toolkits/media/photos/142.jpg",
		"url": "https://learn.adafruit.com/introducing-circuit-playground/overview",
		"notes": "Would you like to learn electronics, with an all-in-one board that has sensors and LEDs built in? Circuit Playground is here, and it's the best way to practice programming on real hardware. No soldering or sewing required! Circuit Playground features an ATmega32u4 micro-processor, just like our popular Flora. It also is round and has alligator-clip pads around it. You can power it from USB, a AAA battery pack, or Lipoly (for advanced users). Program your code into it, then take it on the go.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Alligator clips"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Adafruit Feather": {
		"title": "Adafruit Feather",
		"short_title": "Feather",
		"image": "/toolkits/media/photos/118.jpg",
		"url": "https://www.adafruit.com/feather",
		"notes": "The Adafruit Feather is a complete line of development boards from Adafruit that are both standalone and stackable. They're able to be powered by lipo batteries for on-the-go use or by their micro-USB plugs for stationary projects. Feathers are flexible, portable, and as light as their namesake. We also carry a complete line of accessories and Feather Wings to stack boards and add room for prototyping. At its core, the Adafruit Feather is a complete ecosystem of products - and the best way to get your project flying.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a", "Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Adafruit Flora": {
		"title": "Adafruit Flora",
		"short_title": "Flora",
		"image": "/toolkits/media/photos/103.jpg",
		"url": "https://www.adafruit.com/product/659",
		"notes": "FLORA is Adafruit's fully-featured wearable electronics platform. It's a round, sewable, Arduino-compatible microcontroller designed to empower amazing wearables projects.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Alligator clips"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Adafruit Gemma": {
		"title": "Adafruit Gemma",
		"short_title": "Gemma",
		"image": "/toolkits/media/photos/88.jpg",
		"url": "https://makezine.com/product-review/boards/adafruit-gemma/",
		"notes": "Love FLORA but want a bite-sized version? Look no further, GEMMA is a tiny wearable platform board with a lot of might in a 1 diameter package. Powered by a Attiny85 and programmable with an Arduino IDE over USB, you'll be able to realize any wearable project!",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Alligator clips"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Adafruit Stemma": {
		"title": "Adafruit Stemma",
		"short_title": "Stemma",
		"image": "/toolkits/media/photos/92.jpg",
		"url": "https://learn.adafruit.com/introducing-adafruit-stemma-qt",
		"notes": "You may have noticed that starting in 2018, a lot of Adafruit development boards have connectors that look like this. We call these STEMMA connectors - technically they are called 3 and 4 pin JST PH connectors. They're our way of making it easy to plug-n-play various sensors and devices without a lot of wiring. Especially when the board isn't breadboard-friendly, as above. The idea is that by having easy-to-plug cables, you can wire up things without soldering, wiring and complexity. For example, here's a STEMMA soil sensor.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2b"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["N/A"],
			"Dependencies for programming": ["N/A"],
			"Dependency during deployment": ["N/A"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Arduino Lilypad": {
		"title": "Arduino Lilypad",
		"short_title": "Lilypad",
		"image": "/toolkits/media/photos/3.jpg",
		"url": "https://dl.acm.org/doi/10.1145/1357054.1357123",
		"notes": "The advent of novel materials (such as conductive fibers) combined with accessible embedded computing platforms have made it possible to re-imagine the landscapes of fabric and electronic crafts--extending these landscapes with the creative range of electronic/computational textiles or e-textiles. This paper describes the LilyPad Arduino, a fabric-based construction kit that enables novices to design and build their own soft wearables and other textile artifacts. The kit consists of a microcontroller and an assortment of sensors and actuators in stitch-able packages; these elements can be sewn to cloth substrates and each other with conductive thread to build e-textiles. This paper will introduce the latest version of the kit; reflect on its affordances; present the results of our most recent user studies; and discuss possible directions for future work in the area of personalized e-textile design and its relation to technology education.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Thread"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Multiple copies"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Arduino MKR Vidor 4000": {
		"title": "Arduino MKR Vidor 4000",
		"short_title": "MKR Vidor",
		"image": "/toolkits/media/photos/a2bd8995544e487ab0f80950202c2cdb.jpg",
		"url": "https://store.arduino.cc/arduino-mkr-vidor-4000",
		"notes": "Bring the power of FPGAs to your embedded projects.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Arduino Uno": {
		"title": "Arduino Uno",
		"short_title": "Arduino Uno",
		"image": "/toolkits/media/photos/2.jpg",
		"url": "https://www.arduino.cc/",
		"notes": "Arduino senses the environment by receiving inputs from many sensors, and affects its surroundings by controlling lights, motors, and other actuators.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a", "Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["In commercial products"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"BASIC Stamp": {
		"title": "BASIC Stamp",
		"short_title": "BASIC Stamp",
		"image": "/toolkits/media/photos/b5e0071a00de419795705110ba5b14d7.jpg",
		"url": "https://www.parallax.com/catalog/microcontrollers/basic-stamp",
		"notes": "The BASIC Stamp 2 serves as the brains inside of electronics projects and applications that require a programmable microcontroller.  It is able to control and monitor timers, keypads, motors, sensors, switches, relays, lights, and more. Programming is performed in an easy-to-learn language called PBASIC, which is detailed in the starter kits that include the BASIC Stamp 2; the BASIC Stamp Activity Kit (#90005) and the BASIC Stamp Discovery Kit (#27207). It's amazing what you can accomplish with this proven microcontroller and its simple PBASIC 2 language.  All vital components (processor, clock source, memory, power regulator) are provided on the BS2's tiny PCB; just connect power and go!  Projects needing small, permanent soldering area for circuitry may benefit from combining the BS2-IC with the BASIC Stamp 2 Carrier Board (#27120) or the Super Carrier Board (#27130).  For lower-cost OEM solutions, the processor (PBASIC2 interpreter) and other components are available for integration into your PCB. The BS2-IC is widely used in educational, hobby, and industrial applications and is strongly recommended for first-time BASIC Stamp users because of plentiful resources (documentation, source code, and customer projects) that are available online and in print. Our Stamps in Class Educational Program was designed with this module, making it a great place to learn about microcontrollers. Once you have become familiar with programming in PBASIC and have designed your own projects, you may want to explore our selection of BASIC Stamps with increased power, speed, or memory.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"BeagleBoard": {
		"title": "BeagleBoard",
		"short_title": "BeagleBone",
		"image": "/toolkits/media/photos/77.jpg",
		"url": "https://beagleboard.org/bone",
		"notes": "BeagleBone Black is a low-cost, community-supported development platform for developers and hobbyists. Boot Linux in under 10 seconds and get started on development in less than 5 minutes with just a single USB cable.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a", "Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["In commercial products"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"BITalino (r)evolution / Biosignals for everyone": {
		"title": "BITalino (r)evolution / Biosignals for everyone",
		"short_title": "BITalino",
		"image": "/toolkits/media/photos/102.jpg",
		"url": "https://bitalino.com/en/",
		"notes": "Physical computing has spun a true global revolution in the way that the digital world now interfaces with the physical one. From Twitter-controlled Christmas trees to bicycle jackets with turn signal lights, the do-it-yourself movement is driving endless innovations and stimulating an age of creative engineering. The authors present a novel development platform that extends the principles of physical computing to the physiological domain, changing the way in which projects and applications involving physiological data can be made.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Biomedical sensing"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Bloctopus": {
		"title": "Bloctopus",
		"short_title": "Blocktopus",
		"image": "/toolkits/media/photos/12.jpg",
		"url": "https://dl.acm.org/doi/abs/10.1145/2677199.2680581",
		"notes": "Tangible prototyping enables designers to rapidly iterate design concepts, gather feedback, and learn quickly from mistakes. However, when a higher level of functionality is needed with sensors, novices struggle with technical implementation. Existing novice electronics toolkits, such as Arduino, have lowered the threshold to electronic experimentation, but still require manual creation of circuits and software programming ability. We present Bloctopus, a modular electronic prototyping toolkit that allows direct electrical interfacing over USB, and physical interfacing with LEGO blocks. We present the stand-alone sensor model, where each module can directly interface with either a computer or microcontroller, using musical message passing over MIDI. We show that the modules can be programmed with a simplified data flow model in a web-based visual programming interface. Finally, we present a prototyping case study that demonstrates the expressivity of devices that can be created using LEGO pieces, combined with functional electronic modules.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"Circuit stickers": {
		"title": "Circuit stickers",
		"short_title": "Circuit stickers",
		"image": "/toolkits/media/photos/4.png",
		"url": "https://dl.acm.org/doi/10.1145/2556288.2557150",
		"notes": "We present a novel approach to the construction of electronic prototypes which can support a variety of interactive devices. Our technique, which we call circuit stickers, involves adhering physical interface elements such as LEDs, sounders, buttons and sensors onto a cheap and easy-to-make substrate which provides electrical connectivity. This assembly may include control electronics and a battery for standalone operation, or it can be interfaced to a microcontroller or PC. In this paper we illustrate different points in the design space and demonstrate the technical feasibility of our approach. We have found circuit stickers to be versatile and low-cost, supporting quick and easy construction of physically flexible interactive prototypes. Building extra copies of a device is straightforward. We believe this technology has potential for design exploration, research proto-typing, education and for hobbyist projects.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Interactive paper"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Adhesive"],
			"Connection topology": ["Star"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Multiple copies"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Click Boards": {
		"title": "Click Boards",
		"short_title": "Click",
		"image": "/toolkits/media/photos/20.jpg",
		"url": "https://www.mikroe.com/click",
		"notes": "MikroElektronika MikroBUS™ Adapter click boards™ are designed to revolutionize the way users add new functionality to development boards. The user can push a click board into the innovative new MikroBUS™ standard socket and use it with zero hardware configuration. Categories of MikroElektronika mikroBUS™ Adapter click boards include Wireless Communication Modules, Wired Communication Modules, Sensor Modules, and Miscellaneous Modules & Accessories.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2b"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["N/A"],
			"Dependencies for programming": ["N/A"],
			"Dependency during deployment": ["N/A"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Cubit": {
		"title": "Cubit",
		"short_title": "Cubit",
		"image": "/toolkits/media/photos/22.jpg",
		"url": "https://cubit.cc/",
		"notes": "Cubit is designed to grow with kids—one Cubit kit and our library of hands-on projects will keep them engaged for years to come. Cubit’s dynamic learning activities enable students and their families to build science, technology, engineering, arts, and mathematics (STEAM) knowledge and skills at home through self-directed lessons that challenge, inspire, and engage young learners and adults alike. Our user-friendly platform and guided lessons are designed to be used by anyone at any skill level, whether you have experience with programming or robotics, or not. We believe everyone has the ability to become the next great inventor! Cubit makes it easy—and FUN—to understand and master STEAM concepts.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"Data Flow": {
		"title": "Data Flow",
		"short_title": "Data Flow",
		"image": "/toolkits/media/photos/5096c679be724a9694e83ce20a47b9e6.jpg",
		"url": "https://dl.acm.org/doi/10.1145/3024969.3024978",
		"notes": "Latest hardware improvements on transceivers supporting Low Power Wide Area Networks (LPWAN) make it feasible to connect small battery powered devices hundred of meters or even km away. In this paper, we propose a physical computing paradigm fully exploiting this novel technology. Spatial physical computing (SPC) leverages not only natural manipulation typically used on TUI and construction kits but also integrates the necessary deambulation (around a building or a city) in the process of creating, testing and tuning a distributed smart sensor/actuator network. The overall system is a compound of (an unlimited) set of independent data-processing nodes supporting an event-driven data-flow programming scheme. We demonstrate in a few examples how such networks can be deployed Spatially programmed - through intuitive physical actions, and discuss the unique qualities and challenges of Spatial Physical Computing.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Wireless"],
			"Connection mechanism": ["Wireless"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"dTools": {
		"title": "dTools",
		"short_title": "d.tools",
		"image": "/toolkits/media/photos/24.png",
		"url": "https://dl.acm.org/doi/10.1145/1166253.1166300",
		"notes": "Prototyping is the pivotal activity that structures innovation, collaboration, and creativity in design. Prototypes embody design hypotheses and enable designers to test them. Framin design as a thinking-by-doing activity foregrounds iteration as a central concern. This paper presents d.tools, a toolkit that embodies an iterative-design-centered approach to prototyping information appliances. This work offers contributions in three areas. First, d.tools introduces a statechart-based visual design tool that provides a low threshold for early-stage prototyping, extensible through code for higher-fidelity prototypes. Second, our research introduces three important types of hardware extensibility - at the hardware-to-PC interface, the intra-hardware communication level, and the circuit level. Third, d.tools integrates design, test, and analysis of information appliances. We have evaluated d.tools through three studies a laboratory study with thirteen participants; rebuilding prototypes of existing and emerging devices; and by observing seven student teams who built prototypes with d.tools.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Always tethered"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"e-TAGs": {
		"title": "e-TAGs",
		"short_title": "e-TAGs",
		"image": "/toolkits/media/photos/27.png",
		"url": "https://vtechworks.lib.vt.edu/handle/10919/80538",
		"notes": "The integration of wires and electronics into textiles (e-textiles) has many potential applications for wearable and pervasive computing. Textiles are an integral part of everyday life, from clothing we wear to the carpet we walk upon. Being able to combine electronics with textiles would enable pervasive computing to blend into the background so that the user can go about a normal routine. One of the challenges in e-textile implementation is connecting the electronic components to the fabric cheaply and reliably. This paper describes the design and implementation issues of e-Textile Attached Gadgets (e-TAGs). E-TAGs can use a variety of methods to connect to wires in an etextile. This design allows for e-textile electronics modules that are easily attachable, removable, replaceable, and interchangeable. This paper presents the system architecture, connection techniques, communication alternatives, and experiences from the construction of a prototype wearable e-textile with multiple e-TAGs.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"Electronic blocks": {
		"title": "Electronic blocks",
		"short_title": "Electronic Blocks",
		"image": "/toolkits/media/photos/25.png",
		"url": "https://www.researchgate.net/publication/43462811_Electronic_blocks_Tangible_programming_elements_for_preschoolers",
		"notes": "This paper describes the design, implementation and evaluation of Electronic Blocks, blocks with electronic circuits inside them. By placing Electronic Blocks on top of one another young children build “computer programs” – each stack of Electronic Blocks is capable of a different function. Significantly, the blocks programming input and program output are based in the physical world, with the digital implementation completely hidden from the children. Preliminary studies have found that children aged between four and six are capable of using the blocks to create robots that crash into each other, remote control cars, and lights that flash when you clap. Most children became heavily engaged with the blocks, and learnt simple programming with a minimum of adult support.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"ESLOV": {
		"title": "ESLOV",
		"short_title": "ESLOV",
		"image": "/toolkits/media/photos/26.jpg",
		"url": "https://www.kickstarter.com/projects/iot-invention-kit/eslov-iot-invention-kit",
		"notes": "ESLOV is a plug-and-play toolkit that makes it easy to create Internet of Things (IoT) devices. It simplifies the development process, enabling you to build connected gadgets without prior hardware or programming knowledge. Just piece the modules together and bring your ideas to life in minutes!",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Multi-wire cables", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Closed"]
		}
	},

	"Foxels": {
		"title": "Foxels",
		"short_title": "Foxels",
		"image": "/toolkits/media/photos/30.jpg",
		"url": "https://dl.acm.org/doi/10.1145/3374920.3374935",
		"notes": "Introducing interactive components into furniture has proven difficult due to the different lifespans of furniture and digital devices. We present Foxels, a modular, smart furniture concept that allows users to create their own interactive furniture on demand by simply snapping together individual building blocks. The modular design makes the system flexible to accommodate a variety of interactive furniture setups, making it particularly well-suited for re-configurable spaces. Considering the trade-off between ease-of-use and high versatility, we explored a number of interaction methods that can be applied to modular interactive furniture, thereby extending the well-known tangible programming paradigm. After explaining our implementation, we demonstrate the validity of the proposed concepts by presenting how Foxels can be used in an ideation workshop along with many additional real-world examples.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Home automation"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Magnetic"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration", "Software code"],
			"Dependencies for programming": ["Wireless programming", "Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"FPGA dev. boards (e.g. Adruino Vidor MKR 4000)": {
		"title": "FPGA dev. boards (e.g. Adruino Vidor MKR 4000)",
		"short_title": "FPGA dev. boards",
		"image": "/toolkits/media/photos/151.jpg",
		"url": "https://store.arduino.cc/arduino-mkr-vidor-4000",
		"notes": "",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Generic breakout boards": {
		"title": "Generic breakout boards",
		"short_title": "Breakout boards",
		"image": "/toolkits/media/photos/ce237aaf026b4c55bed1ef0e23bc9518.jpg",
		"url": "https://www.adafruit.com/category/42",
		"notes": "",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2b"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["N/A"],
			"Dependencies for programming": ["N/A"],
			"Dependency during deployment": ["N/A"],
			"Existing use": ["Multiple copies"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Google Coral": {
		"title": "Google Coral",
		"short_title": "Coral",
		"image": "/toolkits/media/photos/148.jpg",
		"url": "https://coral.ai/",
		"notes": "Accelerate ML in a form factor best fit for your product. Prototyping devices include a single-board computer and USB accessory; production-ready devices include a system-on-module and PCIe module.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["AI / ML"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer", "Wireless programming", "Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Grove": {
		"title": "Grove",
		"short_title": "Grove",
		"image": "/toolkits/media/photos/33.jpg",
		"url": "https://www.seeedstudio.com/Grove-Starter-Kit-for-Arduino-p-1855.html",
		"notes": "As an open-source hardware facilitator, we dedicate to make electronic prototyping easy and fast, and we believe that more effort should be put on concept design rather than how to build basic circuits especially in the idea phase. That is why we created Grove. Grove is a modular electronic platform for quick prototyping. Every module has one function, such as touch sensing, creating audio effect and so on. Just plug the modules you need to the base shield, then you are ready to test your idea buds. This Grove - Starter Kit for Arduino is a perfect starter kit for Arduino beginners. It includes a Base Shield which has many Grove connectors onboard, twelve Grove modules that cover most functions needed by a beginner and a very helpful user manual that can help get started quickly.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2b"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["N/A"],
			"Dependencies for programming": ["N/A"],
			"Dependency during deployment": ["N/A"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"i*CATch": {
		"title": "i*CATch",
		"short_title": "i*CATch",
		"image": "/toolkits/media/photos/36_XGEVJYw.jpg",
		"url": "https://dl.acm.org/doi/10.1145/2483710.2483712",
		"notes": "This article presents the design and development of i*CATch, a construction kit for physical and wearable computing that was designed to be scalable, plug-and-play, and to provide support for iterative and exploratory learning. It consists of a standardized construction interface that can be adapted for a wide range of soft textiles or electronic boards, a set of functional components, and an easy-to-use hybrid text-graphical integrated development environment. The objective was to design an easily usable, manufacturable and extensible construction kit that can be used in a wide range of teaching tasks for a wide variety of student demographic profiles. We present detailed specifications of our construction kit and explain some of the major design decisions. Experiences in using the kit in multiple teaching environments, ranging from elementary school to postgraduate, demonstrate that the design objectives have been achieved.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Lego Mindstorms": {
		"title": "Lego Mindstorms",
		"short_title": "Lego Mindstorms",
		"image": "/toolkits/media/photos/6.jpg",
		"url": "https://www.lego.com/en-be/themes/mindstorms",
		"notes": "Let your builder unleash the creative powers of LEGO® MINDSTORMS® EV3. They can build robots that walk, talk, think and do anything you can imagine.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Locking mechanism"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer", "Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"LittleBits": {
		"title": "LittleBits",
		"short_title": "littleBits",
		"image": "/toolkits/media/photos/7.jpg",
		"url": "https://littlebits.com/",
		"notes": "littleBits is a hands-on learning system of electronic building blocks that allows students of all ages to create with technology. Our snap-together Bits are easy to use and simple to understand, no prior experience required.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Magnetic"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"Low-cost WiFi modules (e.g. ESP32, ESP8266)": {
		"title": "Low-cost WiFi modules (e.g. ESP32, ESP8266)",
		"short_title": "Low-cost WiFi modules",
		"image": "/toolkits/media/photos/144.jpg",
		"url": "https://www.espressif.com/en/products/modules",
		"notes": "",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["In commercial products"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"M5Stack Core2": {
		"title": "M5Stack Core2",
		"short_title": "M5Stack",
		"image": "/toolkits/media/photos/0b6a8a33082e4f10ba7d02656fdf829f.jpg",
		"url": "https://m5stack.com/collections/all/products/m5stack-core2-esp32-iot-development-kit?variant=35960244109476",
		"notes": "M5Core2 is the second generation core device in the M5Stack development kit series, which further enhances the functions of the original generation of cores. The MCU is an ESP32 model D0WDQ6-V3 and has dual core Xtensa® 32-bit 240Mhz LX6 processors that can be controlled separately. WiFi and Bluetooth are supported as standard and it includes an on board 16MB Flash and 8MB PSRAM, USB TYPE-C interface for charging, downloading of programs and serial communication, a 2.0-inch integrated capacitive touch screen, and a built-in vibration motor. M5Core2 also features a built-in RTC module which can provide accurate timing. The power supply is managed by an AXP192 power management chip, which can effectively control the power consumption of the base and a built-in green LED power indicator helps to notify the user of battery level. The battery capacity has been upgraded to 390mAh, which can power the core for much longer than the previous model. The M5Core2 retains the SD card slot and speakers. However, in order to ensure higher quality sound output, the I2S digital audio interface power amplifier chip is used to effectively prevent signal distortion. There are independent power and reset buttons on the left side and bottom of the base. The 3 icons on the front of the screen are capacitive buttons which are programmable. There is a small expansion board on the back of the base with a 6-axis IMU sensor and microphone. The development platform and programming language supported by M5Stack Core2 Arduino, UIFlow (using Blockly, MicroPython language) No matter what level of your development and programming skills, M5Stack will help You gradually turn your ideas into reality.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"MakerWear": {
		"title": "MakerWear",
		"short_title": "MakerWear",
		"image": "/toolkits/media/photos/40_LcrGof7.jpg",
		"url": "https://dl.acm.org/doi/10.1145/3025453.3025887",
		"notes": "Wearable construction toolkits have shown promise in broadening participation in computing and empowering users to create personally meaningful computational designs. However, these kits present a high barrier of entry for some users, particularly young children (K-6). In this paper, we introduce MakerWear, a new wearable construction kit for children that uses a tangible, modular approach to wearable creation. We describe our participatory design process, the iterative development of MakerWear, and results from single- and multi-session workshops with 32 children (ages 5-12; M=8.3 years). Our findings reveal how children engage in wearable design, what they make (and want to make), and what challenges they face. As a secondary analysis, we also explore age-related differences.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Magnetic"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Makey Makey": {
		"title": "Makey Makey",
		"short_title": "Makey Makey",
		"image": "/toolkits/media/photos/41.jpg",
		"url": "https://dl.acm.org/doi/10.1145/2148131.2148219",
		"notes": "Makey Makey is a new platform for improvising tangible user interfaces. It enables people to make nature-based interfaces, it is compatible with all software, and it does not require the user to program or to assemble electronics. It is designed for a wide range of audiences, supporting ideation for experts and access for beginners. In the studio, participants will rapidly create several different user interfaces incorporating a wide variety of found objects, both physical and digital. There will also be opportunities to test out the newly created interfaces with each other, and reflect on the design of UI prototyping toolkits.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Alligator clips"],
			"Connection topology": ["Star"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Always tethered"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Mbed": {
		"title": "Mbed",
		"short_title": "Mbed",
		"image": "/toolkits/media/photos/120.jpg",
		"url": "https://os.mbed.com/",
		"notes": "Mbed gives you a free open source IoT operating system with networking and security built-in. Join over 450,000 developers to build your next product with free development tools, and support for over 150 MCU development boards.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"mBot (from Makeblock)": {
		"title": "mBot (from Makeblock)",
		"short_title": "mBot",
		"image": "/toolkits/media/photos/42.png",
		"url": "https://www.makeblock.com/mbot",
		"notes": "mBot is a STEAM education robot for beginners, that makes teaching and learning robot programming simple and fun. With just a screwdriver, the step by step instructions, and a study schedule, children can build a robot from scratch and experience the joys of hands-on creation. As they go, they will learn about a variety of robotic machinery and electronic parts, get to grips with the fundamentals of block-based programming, and develop their logical thinking and design skills.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Robotic vehicles / drones"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Locking mechanism"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"microbit": {
		"title": "microbit",
		"short_title": "microbit",
		"image": "/toolkits/media/photos/17.jpg",
		"url": "https://microbit.org/",
		"notes": "The microbit is a tiny computer that makes coding tangible and promotes digital creativity. You create a program to tell it what to do using one of the online code editors, and download it to your computer as a .hex file - a version of your program that your microbit can read. Two modes of use (a) with 3rd party accessories that the microbit plugs into (only one at a time) and (b) with direct wiring to custom circuits either via breakout board or using croc clips.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Neuron (from Makeblock)": {
		"title": "Neuron (from Makeblock)",
		"short_title": "Neuron",
		"image": "/toolkits/media/photos/45.jpg",
		"url": "https://www.makeblock.com/steam-kits/neuron",
		"notes": "Makeblock Neuron is a programmable electronic building block platform for STEAM education. It contains dozens of different electronic modules such as LED panels, cameras, sensors, ultrasonic, and motors. Through simple combinations, various creative inventions can be created. With the easy-to-use flow-based programming software, the neuron can be “active” without complex code programming to bring concepts and ideas to life.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["No longer"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"Particle": {
		"title": "Particle",
		"short_title": "Particle",
		"image": "/toolkits/media/photos/82.jpg",
		"url": "https://www.particle.io/iot-connectivity/",
		"notes": "The Argon is a powerful Wi-Fi enabled development board that can act as a standalone Wi-Fi endpoint. It is based on the Nordic nRF52840 and has built-in battery charging circuitry so it’s easy to connect a Li-Po and deploy your local network in minutes. The Argon is great for connecting projects to the Particle Device Cloud or as a gateway to connect an entire group of local endpoints.  It's everything you love about the Photon, with more features like Bluetooth.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Phidgets": {
		"title": "Phidgets",
		"short_title": "Phidgets",
		"image": "/toolkits/media/photos/47.jpg",
		"url": "https://dl.acm.org/doi/abs/10.1145/502348.502388",
		"notes": "At Phidgets, our philosophy is that you don't have to be an electrical engineer in order to create sophisticated projects using motors, sensors and other electronics. You simply need to know how to code. Phidgets are building-blocks for sensing and control using a computer, tablet, or phone. Phidgets enable your software application to interact with the physical world. The advantage of using Phidgets is that all Phidgets can be plugged in and used in your project out of the box, without having to follow complex pinout diagrams or configure communication between the device and computer. With Phidgets, we deal with the details of getting the electronics behaving as they should, so you can focus on the programming and details of your final product.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Locking mechanism", "Screws"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Pin&Play": {
		"title": "Pin&Play",
		"short_title": "Pin & play",
		"image": "/toolkits/media/photos/48.jpg",
		"url": "https://dl.acm.org/doi/abs/10.5555/647988.741497",
		"notes": "We introduce a new concept of networking objects in everyday environments. The basic idea is to build on the familiar use of surfaces such as walls and boards for attachment of mundane objects such as light controls, pictures, and notes. Hence our networking concept entails augmentation of such surfaces with conductive material to enable them as communication medium. It further incorporates the use of simple pushpin-connectors through which objects can be attached to network-enabled surfaces. Thereby users are provided with a highly familiar mechanism for adding objects ad hoc to the bus network, hence its name Pin&Play. This paper describes the architecture and principles of Pin&Play, as well as the design and implementation of a smart notice-board as proof of concept.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Home automation"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"Pine": {
		"title": "Pine",
		"short_title": "Pine",
		"image": "/toolkits/media/photos/150.jpg",
		"url": "https://www.pine64.org/devices/single-board-computers/pine-a64/",
		"notes": "A Small Form-Factor Single Board Computer Capable of 4K Playback. ROCK64 is a credit card sized Single Board Computer powered by Rockchip RK3328 Quad-Core ARM Cortex A53 64-Bit Processor and support up to 4GB 1600MHz LPDDR3 memory. It provides an eMMC module socket, MicroSD Card slot, Pi-2 Bus, Pi-P5+ Bus, USB 3.0 and many others peripheral devices interface for makers to integrate with sensors and devices. Various Operating Systems are made available by open source community and partner projects including numerous Linux Distributions, Android,  *BSD and many more to come.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer", "Wireless programming", "Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Pmod": {
		"title": "Pmod",
		"short_title": "Pmod",
		"image": "/toolkits/media/photos/50_Gf6O3FK.png",
		"url": "https://store.digilentinc.com/pmod-modules-connectors/",
		"notes": "Pmod™ devices are Digilent’s line of small I/O interface boards that offer an ideal way to extend the capabilities of programmable logic and embedded control boards. They allow sensitive signal conditioning circuits and high-power drive circuits to be placed where they are most effective - near sensors and actuators. Pmod modules communicate with system boards using 6, 8, or 12-pin connectors that can carry multiple digital control signals, including SPI and other serial protocols. Pmod modules allow for more effective designs by routing analog signals and power supplies only where they are needed, and away from digital controller boards. Pmod modules work on system boards that adhere to the Pmod Standard. The Pmod standard lays out guidelines for form factor, communication protocols and access to a target audience through reference manuals, code examples, user guides, and technical support.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2b"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["N/A"],
			"Dependencies for programming": ["N/A"],
			"Dependency during deployment": ["N/A"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Printoo": {
		"title": "Printoo",
		"short_title": "Printoo",
		"image": "/toolkits/media/photos/52.jpg",
		"url": "https://www.kickstarter.com/projects/1030661323/printoo-paper-thin-flexible-arduinotm-compatible-m",
		"notes": "Printoo is a platform of paper-thin circuit boards and modules. It gives makers an open-source, lightweight, flexible, and modular Arduino-compatible platform to create just about anything you want! What makes Printoo amazingly unique is that it comes with a range of printed electronics modules previously unavailable to the public. These are electronics building blocks of the future, only not so rigid.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Project Bloks": {
		"title": "Project Bloks",
		"short_title": "Project Bloks",
		"image": "/toolkits/media/photos/72.jpg",
		"url": "https://www.startup-buzz.com/googles-project-bloks-makes-coding-fun-kids/",
		"notes": "Google has come up with Project Bloks- a physical block building exercise that helps kids in learning coding. Big companies are investing in developing talent base by introducing kids to coding at early stage so that they can develop a flair for it. Apple also recently launched Swift Playgrounds- an app designed to teach coding to kids.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"Propeller": {
		"title": "Propeller",
		"short_title": "Propeller",
		"image": "/toolkits/media/photos/474989aa7de34b579e7e4c8a36530226.jpg",
		"url": "https://propeller.parallax.com/",
		"notes": "The Propeller 2 is a microcontroller architecture consisting of 1, 2, 4, 8, or 16 identical 32-bit processors, called cogs, which connect to a common hub. The hub provides up to 1 MB of shared RAM, a CORDIC math solver, and housekeeping facilities. The architecture supports up to 64 smart I/O pins, each capable of many autonomous analog and digital functions.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a", "Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"PushPin": {
		"title": "PushPin",
		"short_title": "Pushpin Computing",
		"image": "/toolkits/media/photos/53.jpg",
		"url": "https://www.researchgate.net/publication/225134541_Pushpin_Computing_System_Overview_A_Platform_for_Distributed_Embedded_Ubiquitous_Sensor_Networks",
		"notes": "A hardware and software platform has been designed and implemented for modeling, testing, and deploying distributed peer-to-peer sensor networks comprised of many identical nodes. Each node possesses the tangible affordances of a commonplace pushpin to meet ease-of-use and power considerations. The sensing, computational, and communication abilities of a “Pushpin”, as well as a “Pushpin” operating system supporting mobile computational processes are treated in detail. Example applications and future work are discussed.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"Quilt Snaps": {
		"title": "Quilt Snaps",
		"short_title": "Quilt Snaps",
		"image": "/toolkits/media/photos/54.png",
		"url": "https://www.researchgate.net/publication/4215957_Quilt_Snaps_A_fabric_based_computational_construction_kit",
		"notes": "In this paper we present Quilt Snaps, a fabric based construction kit consisting of a set of computationally enhanced quilting pieces. Our discussion focuses on three ways that children can engage with Quilt Snaps. First, Quilt Snaps allows children to act as the engineers, designers, and decorators of their own digital manipulatives. Second, by playing with the manipulatives that they've helped to construct, children can learn about concepts relevant to programming, graph theory, and dynamical systems. Finally, since Quilt Snaps is fabric based, children can use the pieces they construct as personal mobile display media.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Locking mechanism"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"Raspberry Pi": {
		"title": "Raspberry Pi",
		"short_title": "Raspberry Pi",
		"image": "/toolkits/media/photos/df030eca39d24b5e9c856243c67d63b6.jpg",
		"url": "https://www.raspberrypi.org/",
		"notes": "",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a", "Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer", "Wireless programming", "Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["In commercial products"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"Raspberry Pi Pico": {
		"title": "Raspberry Pi Pico",
		"short_title": "Pico",
		"image": "/toolkits/media/photos/79.png",
		"url": "https://www.raspberrypi.org/products/raspberry-pi-pico/",
		"notes": "The new flexible $4 microcontroller board from Raspberry Pi. Raspberry Pi Pico is a tiny, fast, and versatile board built using RP2040, a brand new microcontroller chip designed by Raspberry Pi in the UK.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"roBlocks / Cubelets": {
		"title": "roBlocks / Cubelets",
		"short_title": "Cubelets",
		"image": "/toolkits/media/photos/56.png",
		"url": "https://dl.acm.org/doi/abs/10.1145/1180995.1181010",
		"notes": "We describe work in progress on roBlocks, a computational construction kit that encourages users to experiment and play with a collection of sensor, logic and actuator blocks, exposing them to a variety of advanced concepts including kinematics, feedback and distributed control. Its interface presents novice users with a simple, tangible set of robotic blocks, whereas advanced users work with software tools to analyze and rewrite the programs embedded in each block. Early results suggest that roBlocks may be an effective vehicle to expose young people to complex ideas in science, technology, engineering and mathematics. Cubelets are the only toy that uses Tactile Coding to help builders of nearly any age explore robotics, coding, and more. Uniquely designed, they are little bundles of software inside little bundles of hardware. As you build a robot, you learn to build a program. It’s a fun and fascinating way to introduce big ideas through play.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Robotic vehicles / drones"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Magnetic"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration", "Software code"],
			"Dependencies for programming": ["Wired computer", "Wireless programming"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"SamLabs": {
		"title": "SamLabs",
		"short_title": "SAM Labs modules",
		"image": "/toolkits/media/photos/57.jpg",
		"url": "https://samlabs.com/us/",
		"notes": "Inspiring a generation of problem-solvers through STEM, STEAM and Coding courses. Equipping educators with the tools, know-how, and mindset to reach learners’ potential for computational thinking",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Wireless"],
			"Connection mechanism": ["Wireless"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wireless programming"],
			"Dependency during deployment": ["Wireless server needed"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Closed"]
		}
	},

	"Silicon vendor dev. boards (e.g. TI launchpad)": {
		"title": "Silicon vendor dev. boards (e.g. TI launchpad)",
		"short_title": "Silicon vendor dev. boards",
		"image": "/toolkits/media/photos/109.jpg",
		"url": "http://www.ti.com/design-resources/embedded-development/hardware-kits-boards.html",
		"notes": "Get started with microcontroller (MCU) LaunchPad™ Development Kits from Texas Instruments. Choose from a variety of low-cost kits and BoosterPack plug-in modules. Scalable software tools provide multiple points of entry for programming your LaunchPad kit.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2a", "Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Individual conductors", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"SoftMod": {
		"title": "SoftMod",
		"short_title": "SoftMod",
		"image": "/toolkits/media/photos/9342f376c588454e9d847df84c719bc8.jpg",
		"url": "https://dl.acm.org/doi/abs/10.1145/3374920.3374950",
		"notes": "We present SoftMod, a novel modular electronics kit consisting of soft and flexible modules that snap together. Unlike existing modular kits, SoftMod tracks the topology of interconnected modules and supports basic plug-and-play behavior as well as advanced user-specified behavior. As such, the shape of a SoftMod assembly does not depend on the desired behavior and various 2D and 3D electronic systems can be realized. While the plug-and-play nature of our modules stimulates play, the advanced features for specifying behavior and for making a variety of soft and flexible shapes, offer a high-ceiling when experimenting with novel types of interfaces, such as wearables, and interactive skin and textiles.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Wearables / textiles"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Direct module-to-module"],
			"Connection mechanism": ["Magnetic"],
			"Connection topology": ["Bus"],
			"Programming style": ["Physical configuration", "Software code"],
			"Dependencies for programming": ["Wired computer", "Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"SparkFun Qwiic": {
		"title": "SparkFun Qwiic",
		"short_title": "Qwiic",
		"image": "/toolkits/media/photos/119.jpg",
		"url": "https://www.sparkfun.com/qwiic",
		"notes": "Prototyping with I2C has never been easier. SparkFun's Qwiic Connect System uses 4-pin JST connectors to quickly interface development boards with sensors, LCDs, relays and more.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 2b"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers", "Professional engineers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Bus"],
			"Programming style": ["N/A"],
			"Dependencies for programming": ["N/A"],
			"Dependency during deployment": ["N/A"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"Sticking Together": {
		"title": "Sticking Together",
		"short_title": "I/O Stickers",
		"image": "/toolkits/media/photos/62.png",
		"url": "https://dl.acm.org/doi/abs/10.1145/1999030.1999071",
		"notes": "We present I/O Stickers, adhesive sensors and actuators that children can use to handcraft personalized remote communication interfaces. By attaching I/O Stickers to special wirelessly connected greeting cards, children can invent ways to communicate with long-distance loved ones. Children decorate these cards with their choice of craft materials, creatively expressing themselves while making a functioning interface. The low-bandwidth connections -- simple actuators that change as the sensor stickers are manipulated -- leave room not only to design the look and function of the card, but also to decide how to interpret the information transmitted. We aim to empower children to implement ideas that would otherwise require advanced electronics knowledge. In addition, we hope to support creative learning about communication and to make keeping in touch playful and meaningful. In this paper, we describe the design of the I/O Stickers, analyze a variety of artifacts children have created, and explore future directions for the toolkit.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Interactive paper"],
			"Promoted with user groups": ["K-12 Education"],
			"Type of connection": ["Individual conductors"],
			"Connection mechanism": ["Adhesive"],
			"Connection topology": ["Star"],
			"Programming style": ["Physical configuration"],
			"Dependencies for programming": ["Fully self-contained"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},

	"The Calder toolkit": {
		"title": "The Calder toolkit",
		"short_title": "Calder toolkit",
		"image": "/toolkits/media/photos/63.png",
		"url": "https://dl.acm.org/doi/10.1145/1013115.1013139",
		"notes": "Toolkits and other tools have dramatically reduced the time and technical expertise needed to design and implement graphical user interfaces (GUIs) allowing high-quality, iterative, user-centered design to become a common practice. Unfortunately the generation of functioning prototypes for physical interactive devices as not had similar support -- it still requires substantial time and effort by individuals with highly specialized skills and tools. This creates a divide between a designers' ability to explore form and interactivity of product designs and the ability to iterate on the basis of high fidelity interactive experiences with a functioning prototype. To help overcome this difficulty we have developed the Calder hardware toolkit. Calder is a development environment for rapidly exploring and prototyping functional physical interactive devices. Calder provides a set of reusable small input and output components, and integration into existing interface prototyping environments. These components communicate with a computer using wired and wireless connections. Calder is a tool targeted toward product and interaction designers to aid them in their early design process. In this paper we describe the process of gaining an understanding of the needs and workflow habits of our target users to generate a collection of requirements for such a toolkit. We describe technical challenges imposed by these needs, and the specifics of design and implementation of the toolkit to meet these challenges.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Multi-wire cables", "Wireless"],
			"Connection mechanism": ["Friction fit", "Wireless"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer", "Wireless programming"],
			"Dependency during deployment": ["Always tethered", "Wireless server needed"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["No"],
			"Open source": ["Partial"]
		}
	},

	"TinkerForge": {
		"title": "TinkerForge",
		"short_title": "TinkerForge",
		"image": "/toolkits/media/photos/65.jpg",
		"url": "https://www.tinkerforge.com/en/doc/Primer.html",
		"notes": "With Tinkerforge modules you can realize your projects rapidly. Just choose the needed sensors, motor controllers or interface blocks and stick them together. Integrating the blocks into your software with help of the easy to use API is a breeze.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["K-12 Education", "Makers"],
			"Type of connection": ["Multi-wire cables", "Direct module-to-module"],
			"Connection mechanism": ["Friction fit"],
			"Connection topology": ["Hybrid star/bus"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Fully self-contained"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Yes"],
			"Third party use": ["Yes"],
			"Open source": ["Fully"]
		}
	},

	"VoodooIO": {
		"title": "VoodooIO",
		"short_title": "VoodooIO",
		"image": "/toolkits/media/photos/67.jpg",
		"url": "https://dl.acm.org/doi/abs/10.1145/1316511.1316518",
		"notes": "Existing gaming controllers are limited in their end-user configurability. As a complement to current game control technology, we present the VoodooIO Gaming Kit, a real-time adaptable gaming controller. We introduce the concept of appropriable gaming devices, which allow players to define and actively reconfigure their gaming space, making it appropriate to their personal preference and gaming needs. The technology and its conceived usage are illustrated through its application to two commercially available computer games, as well as through the results of a formal user study.",
		"in_scope": true,
		"labels": {
			"Type of electronics": ["Type 3"],
			"Electronic sub-domain": ["Generic electronic systems"],
			"Promoted with user groups": ["Makers"],
			"Type of connection": ["Multi-wire cables"],
			"Connection mechanism": ["Alligator clips"],
			"Connection topology": ["Star"],
			"Programming style": ["Software code"],
			"Dependencies for programming": ["Wired computer"],
			"Dependency during deployment": ["Always tethered"],
			"Existing use": ["Only used in one-offs"],
			"Commercially available": ["Never"],
			"Third party use": ["Yes"],
			"Open source": ["Partial"]
		}
	},


}